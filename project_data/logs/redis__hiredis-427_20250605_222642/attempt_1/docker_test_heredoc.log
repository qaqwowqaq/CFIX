=== METHOD: HEREDOC ===
=== AI PATCH PREVIEW ===
diff --git a/hiredis.c b/hiredis.c
index abc1234..def5678 100644
--- a/hiredis.c
+++ b/hiredis.c
@@ -1013,7 +1013,7 @@ int redisFormatSdsCommandArgv(sds *target, int argc, const char **argv,
     /* Construct command */
     cmd = sdscatfmt(cmd, "*%i\r\n", argc);
     for (j=0; j < argc; j++) {
-        len = argvlen ? argvlen[j] : strlen(argv[j]);
+        len = argvlen ? argvlen[j] : (argv[j] ? strlen(argv[j]) : 0);


=== TEST EXECUTION ===
patching file hiredis.c
Hunk #1 succeeded at 506 (offset -507 lines).
fix_run.sh: line 8: RUN: command not found
cc -std=c99 -pedantic -c -O3 -fPIC  -Wall -W -Wstrict-prototypes -Wwrite-strings -g -ggdb  test.c
cc -std=c99 -pedantic -c -O3 -fPIC  -Wall -W -Wstrict-prototypes -Wwrite-strings -g -ggdb  net.c
cc -std=c99 -pedantic -c -O3 -fPIC  -Wall -W -Wstrict-prototypes -Wwrite-strings -g -ggdb  hiredis.c
cc -std=c99 -pedantic -c -O3 -fPIC  -Wall -W -Wstrict-prototypes -Wwrite-strings -g -ggdb  sds.c
cc -std=c99 -pedantic -c -O3 -fPIC  -Wall -W -Wstrict-prototypes -Wwrite-strings -g -ggdb  async.c
cc -std=c99 -pedantic -c -O3 -fPIC  -Wall -W -Wstrict-prototypes -Wwrite-strings -g -ggdb  read.c
ar rcs libhiredis.a net.o hiredis.o sds.o async.o read.o
cc -O3 -fPIC  -Wall -W -Wstrict-prototypes -Wwrite-strings -g -ggdb  -o hiredis-test   test.o libhiredis.a
./hiredis-test
#01 Format command without interpolation: [0;32mPASSED[0;0m
#02 Format command with %s string interpolation: [0;32mPASSED[0;0m
#03 Format command with %s and an empty string: [0;32mPASSED[0;0m
#04 Format command with an empty string in between proper interpolations: [0;32mPASSED[0;0m
#05 Format command with %b string interpolation: [0;32mPASSED[0;0m
#06 Format command with %b and an empty string: [0;32mPASSED[0;0m
#07 Format command with literal %: [0;32mPASSED[0;0m
#08 Format command with printf-delegation (int): [0;32mPASSED[0;0m
#09 Format command with printf-delegation (char): [0;32mPASSED[0;0m
#10 Format command with printf-delegation (short): [0;32mPASSED[0;0m
#11 Format command with printf-delegation (long): [0;32mPASSED[0;0m
#12 Format command with printf-delegation (long long): [0;32mPASSED[0;0m
#13 Format command with printf-delegation (unsigned int): [0;32mPASSED[0;0m
#14 Format command with printf-delegation (unsigned char): [0;32mPASSED[0;0m
#15 Format command with printf-delegation (unsigned short): [0;32mPASSED[0;0m
#16 Format command with printf-delegation (unsigned long): [0;32mPASSED[0;0m
#17 Format command with printf-delegation (unsigned long long): [0;32mPASSED[0;0m
#18 Format command with printf-delegation (float): [0;32mPASSED[0;0m
#19 Format command with printf-delegation (double): [0;32mPASSED[0;0m
#20 Format command with invalid printf format: [0;32mPASSED[0;0m
#21 Format command by passing argc/argv without lengths: [0;32mPASSED[0;0m
#22 Format command by passing argc/argv with lengths: [0;32mPASSED[0;0m
#23 Error handling in reply parser: [0;32mPASSED[0;0m
#24 Memory cleanup in reply parser: [0;32mPASSED[0;0m
#25 Set error on nested multi bulks with depth > 7: [0;32mPASSED[0;0m
#26 Works with NULL functions for reply: [0;32mPASSED[0;0m
#27 Works when a single newline (\r\n) covers two calls to feed: [0;32mPASSED[0;0m
#28 Don't reset state after protocol error: [0;32mPASSED[0;0m
#29 Don't do empty allocation for empty multi bulk: [0;32mPASSED[0;0m
#30 Returns error when host cannot be resolved: [0;32mPASSED[0;0m
#31 Returns error when the port is not open: [0;32mPASSED[0;0m
#32 Returns error when the unix_sock socket path doesn't accept connections: [0;32mPASSED[0;0m
#33 Don't fail when redisFree is passed a NULL value: [0;32mPASSED[0;0m
#34 Don't fail when freeReplyObject is passed a NULL value: [0;32mPASSED[0;0m

Testing against TCP connection (172.17.0.2:6379):
#35 Is able to deliver commands: [0;32mPASSED[0;0m
#36 Is a able to send commands verbatim: [0;32mPASSED[0;0m
#37 %s String interpolation works: [0;32mPASSED[0;0m
#38 %b String interpolation works: [0;32mPASSED[0;0m
#39 Binary reply length is correct: [0;32mPASSED[0;0m
#40 Can parse nil replies: [0;32mPASSED[0;0m
#41 Can parse integer replies: [0;32mPASSED[0;0m
#42 Can parse multi bulk replies: [0;32mPASSED[0;0m
#43 Can handle nested multi bulk replies: [0;32mPASSED[0;0m
#44 Successfully completes a command when the timeout is not exceeded: [0;32mPASSED[0;0m
#45 Does not return a reply when the command times out: [0;32mPASSED[0;0m
#46 Reconnect properly reconnects after a timeout: [0;32mPASSED[0;0m
#47 Reconnect properly uses owned parameters: [0;32mPASSED[0;0m
#48 Returns I/O error when the connection is lost: [0;32mPASSED[0;0m
#49 Returns I/O error on socket timeout: [0;32mPASSED[0;0m
#50 Set error when an invalid timeout usec value is given to redisConnectWithTimeout: [0;32mPASSED[0;0m
#51 Set error when an invalid timeout sec value is given to redisConnectWithTimeout: [0;32mPASSED[0;0m
#52 Append format command: [0;32mPASSED[0;0m
#53 Throughput:
	(1000x PING: 0.030s)
	(1000x LRANGE with 500 elements: 0.072s)
	(10000x PING (pipelined): 0.002s)
	(10000x LRANGE with 500 elements (pipelined): 0.402s)

Testing against Unix socket connection (/tmp/redis.sock):
#54 Is able to deliver commands: [0;32mPASSED[0;0m
#55 Is a able to send commands verbatim: [0;32mPASSED[0;0m
#56 %s String interpolation works: [0;32mPASSED[0;0m
#57 %b String interpolation works: [0;32mPASSED[0;0m
#58 Binary reply length is correct: [0;32mPASSED[0;0m
#59 Can parse nil replies: [0;32mPASSED[0;0m
#60 Can parse integer replies: [0;32mPASSED[0;0m
#61 Can parse multi bulk replies: [0;32mPASSED[0;0m
#62 Can handle nested multi bulk replies: [0;32mPASSED[0;0m
#63 Successfully completes a command when the timeout is not exceeded: [0;32mPASSED[0;0m
#64 Does not return a reply when the command times out: [0;32mPASSED[0;0m
#65 Reconnect properly reconnects after a timeout: [0;32mPASSED[0;0m
#66 Reconnect properly uses owned parameters: [0;32mPASSED[0;0m
#67 Returns I/O error when the connection is lost: [0;32mPASSED[0;0m
#68 Returns I/O error on socket timeout: [0;32mPASSED[0;0m
#69 Throughput:
	(1000x PING: 0.024s)
	(1000x LRANGE with 500 elements: 0.056s)
	(10000x PING (pipelined): 0.002s)
	(10000x LRANGE with 500 elements (pipelined): 0.404s)

Testing against inherited fd (/tmp/redis.sock):
Connecting to inherited fd 3
#70 Is able to deliver commands: [0;32mPASSED[0;0m
#71 Is a able to send commands verbatim: [0;32mPASSED[0;0m
#72 %s String interpolation works: [0;32mPASSED[0;0m
#73 %b String interpolation works: [0;32mPASSED[0;0m
#74 Binary reply length is correct: [0;32mPASSED[0;0m
#75 Can parse nil replies: [0;32mPASSED[0;0m
#76 Can parse integer replies: [0;32mPASSED[0;0m
#77 Can parse multi bulk replies: [0;32mPASSED[0;0m
#78 Can handle nested multi bulk replies: [0;32mPASSED[0;0m
ALL TESTS PASSED
