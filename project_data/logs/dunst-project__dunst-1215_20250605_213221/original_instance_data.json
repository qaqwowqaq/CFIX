{
  "repo": "dunst-project/dunst",
  "pull_number": 1215,
  "instance_id": "dunst-project__dunst-1215",
  "issue_numbers": [
    "1173"
  ],
  "base_commit": "5ef093c3e2d4d42a73b84b28231f28e9314d902e",
  "patch": "diff --git a/.valgrind.suppressions b/.valgrind.suppressions\nindex ce954e3a7..e2515facd 100644\n--- a/.valgrind.suppressions\n+++ b/.valgrind.suppressions\n@@ -6,6 +6,19 @@\n    obj:/lib/ld-musl-x86_64.so.1\n }\n \n+# Ignore another musls' weird error\n+{\n+   musl_alpine_libc\n+   Memcheck:Leak\n+   match-leak-kinds: definite\n+   fun:malloc\n+   fun:realloc\n+   fun:getdelim\n+   obj:*\n+   fun:vgMemCheck_new_block\n+   obj:*\n+}\n+\n # rsvg_error_handle_close got fixed in\n # - GNOME/librsvg@7bf1014\n # (2018-11-12, first tags: v2.45.0, v2.44.9)\ndiff --git a/docs/dunst.5.pod b/docs/dunst.5.pod\nindex 3f4f2acb2..62e9a29b9 100644\n--- a/docs/dunst.5.pod\n+++ b/docs/dunst.5.pod\n@@ -911,7 +911,8 @@ If B<icon_position> is set to off, this setting is ignored.\n \n Updates the icon of the notification, it should be a path or a name for a valid\n image. This overrides the icon that was sent with dunstify or another notification\n-tool.\n+tool. Expansion of the argument is carried out using wordexp(3)\n+with command substitution disabled.\n \n =item C<icon_position> (values: [left/right/top/off], default: left)\n \n@@ -922,7 +923,8 @@ disables icons.\n \n Sets the default icon of the notification, it should be a path or a name for a\n valid image. This does B<not> override the icon that was sent with dunstify or\n-another notification tool.\n+another notification tool. Expansion of the argument is carried out using\n+wordexp(3) with command substitution disabled.\n \n =item C<set_stack_tag>\n \n@@ -1087,9 +1089,10 @@ Note that some variables may be empty.\n If the notification is suppressed, the script will not be run unless\n B<always_run_script> is set to true.\n \n-If '~/' occurs at the beginning of the script parameter, it will get replaced by the\n-users' home directory. If the value is not an absolute path, the directories in the\n-PATH variable will be searched for an executable of the same name.\n+The script parameter is expanded according to wordexp(3) with command\n+substitution disabled. If the expanded value is not an absolute path, the\n+directories in the PATH variable will be searched for an executable of the same\n+name.\n \n =head1 COLORS\n \ndiff --git a/src/utils.c b/src/utils.c\nindex 61bc43d83..e47945717 100644\n--- a/src/utils.c\n+++ b/src/utils.c\n@@ -13,6 +13,7 @@\n #include <sys/stat.h>\n #include <time.h>\n #include <unistd.h>\n+#include <wordexp.h>\n \n #include \"log.h\"\n #include \"settings_data.h\"\n@@ -179,16 +180,34 @@ int string_array_length(char **s)\n /* see utils.h */\n char *string_to_path(char *string)\n {\n-\n-        if (string && STRN_EQ(string, \"~/\", 2)) {\n-                char *home = g_strconcat(user_get_home(), \"/\", NULL);\n-\n-                string = string_replace_at(string, 0, 2, home);\n-\n-                g_free(home);\n+        ASSERT_OR_RET(string, string);\n+\n+        wordexp_t we;\n+        switch (wordexp(string, &we, WRDE_NOCMD | WRDE_UNDEF)) {\n+                case 0:\n+                        break;\n+                case WRDE_BADCHAR:\n+                        LOG_W(\"Expansion of \\\"%s\\\" failed. It contains invalid characters.\", string);\n+                        return string;\n+                case WRDE_BADVAL:\n+                        LOG_W(\"Expansion of \\\"%s\\\" failed. It contains an undefined variable.\", string);\n+                        return string;\n+                case WRDE_CMDSUB:\n+                        LOG_W(\"Expansion of \\\"%s\\\" failed. The requested command substitution is currently not supported.\", string);\n+                        return string;\n+                case WRDE_NOSPACE:\n+                        LOG_W(\"Expansion of \\\"%s\\\" failed. We ran out of memory.\", string);\n+                        return string;\n+                case WRDE_SYNTAX:\n+                        LOG_W(\"Expansion of \\\"%s\\\" failed. It contains invalid syntax.\", string);\n+                        return string;\n         }\n+        g_free(string);\n+\n+        char *res = g_strjoinv(\" \", we.we_wordv);\n+        wordfree(&we);\n \n-        return string;\n+        return res;\n }\n \n /* see utils.h */\n",
  "test_patch": "diff --git a/test/option_parser.c b/test/option_parser.c\nindex 8773fad10..72d31a67f 100644\n--- a/test/option_parser.c\n+++ b/test/option_parser.c\n@@ -521,9 +521,14 @@ TEST test_string_to_path(void)\n                 \"/path/p argument\",\n                 \"p with multiple arguments\",\n                 \"~/p/p\",\n+                \"$HOME/p/p\",\n+                \"$TEST_ENV/p/p\",\n         };\n \n+        setenv(\"TEST_ENV\", \"foobar\", 1);\n+\n         char *expanded_home = g_strconcat(user_get_home(), \"/\", \"p/p\", NULL);\n+        char *expanded_env = g_strconcat(\"foobar\", \"/p/p\", NULL);\n         const char* results[] = {\n                 \"/bin/something\",\n                 \"something\",\n@@ -531,6 +536,8 @@ TEST test_string_to_path(void)\n                 \"/path/p argument\",\n                 \"p with multiple arguments\",\n                 expanded_home,\n+                expanded_home,\n+                expanded_env,\n         };\n \n         const char* results2[][5] = {\n@@ -540,6 +547,8 @@ TEST test_string_to_path(void)\n                 {\"/path/p\", \"argument\", NULL},\n                 {\"p\", \"with\", \"multiple\", \"arguments\", NULL},\n                 {expanded_home},\n+                {expanded_home},\n+                {expanded_env},\n         };\n \n         ARRAY_SAME_LENGTH(inputs, results);\n@@ -557,6 +566,7 @@ TEST test_string_to_path(void)\n         }\n \n         g_free(val);\n+        g_free(expanded_env);\n         g_free(expanded_home);\n         g_strfreev(val2);\n         PASS();\ndiff --git a/test/utils.c b/test/utils.c\nindex cca574b25..938ebde2a 100644\n--- a/test/utils.c\n+++ b/test/utils.c\n@@ -1,3 +1,5 @@\n+#include <features.h>\n+\n #include \"../src/utils.c\"\n #include \"greatest.h\"\n \n@@ -152,6 +154,7 @@ TEST test_string_to_path(void)\n         ASSERT_STR_EQ(exp, (ptr = string_to_path(g_strdup(exp))));\n         free(ptr);\n \n+        // This might fail, when a user named path exists on the host running the tests.\n         exp = \"~path/with/wrong/tilde\";\n         ASSERT_STR_EQ(exp, (ptr = string_to_path(g_strdup(exp))));\n         free(ptr);\n@@ -166,6 +169,19 @@ TEST test_string_to_path(void)\n         free(exp);\n         free(ptr);\n \n+        ASSERT_STR_EQ((exp = g_strconcat(home, \"/.path/with/HOME environment variable\", NULL)),\n+                      (ptr = string_to_path(g_strdup(\"$HOME/.path/with/HOME environment variable\"))));\n+        free(exp);\n+        free(ptr);\n+\n+// Just glibc properly returns an error when using `WRDE_UNDEF` and an\n+// undefined variable is found. musl accepts this flag and ignores it.\n+#ifdef __GLIBC__\n+        exp = \"/some/$UNDEFINED/variable\";\n+        ASSERT_STR_EQ(exp, (ptr = string_to_path(g_strdup(exp))));\n+        free(ptr);\n+#endif\n+\n         PASS();\n }\n \n",
  "problem_statement": "Can't set default_icon path with environment variable ($HOME or ~)\n### Issue description\r\n\r\nThe `default_icon` path cannot use the `$HOME` or `~` environment variables. The full path must be specified to for it to work. E.x.: `/home/user/.local/share/icons/my-icon.svg`\r\n\r\n### Installation info\r\n\r\n- Version: `1.91`\r\n- Install type: [Arch package](https://archlinux.org/packages/community/x86_64/dunst/)\r\n- Window manager / Desktop environment: `i3`\r\n- Distro: `Arch Linux`\r\n\r\n<details>\r\n<summary>Minimal dunstrc</summary>\r\n<!-- Try creating a minimal dunstrc that still reproduces the issue and paste it below -->\r\n\r\n```ini\r\n[urgency_low]\r\n    # IMPORTANT: colors have to be defined in quotation marks.\r\n    # Otherwise the \"#\" and following would be interpreted as a comment.\r\n    background = \"#222222\"\r\n    foreground = \"#888888\"\r\n    timeout = 10\r\n    # Icon for notifications with low urgency, uncomment to enable\r\n    default_icon = $HOME/.local/share/icons/urg-low.svg\r\n\r\n[urgency_normal]\r\n    background = \"#285577\"\r\n    foreground = \"#ffffff\"\r\n    timeout = 10\r\n    # Icon for notifications with normal urgency, uncomment to enable\r\n    default_icon = ~/.local/share/icons/urg-norm.svg\r\n\r\n[urgency_critical]\r\n    background = \"#900000\"\r\n    foreground = \"#ffffff\"\r\n    frame_color = \"#ff0000\"\r\n    timeout = 0\r\n    # Icon for notifications with critical urgency, uncomment to enable\r\n    default_icon = $HOME/.local/share/icons/urg-crit.svg\r\n```\r\n</details>\r\n\r\n### Additional information\r\n\r\nThe config above is copied from the example config: lines 313-335. This is identical to my `dunstrc`, minus the actual `default_icon` path and colors.\r\n\r\nTo resolve this issue, I have tried things such as replacing `default_icon` with `new_icon` and `icon`. I have also tried changing the `icon_path`, which points to the directory holding the images for the icons.\r\n\r\nAccording to #520 this issue was fixed and merged 4 years ago, so I'm not sure why I can't get it working.\r\n\r\nI can confirm that the environment variables work in a shell script using `dunstify`.\r\n\n",
  "hints_text": "",
  "created_at": "2023-10-23T14:13:45Z"
}