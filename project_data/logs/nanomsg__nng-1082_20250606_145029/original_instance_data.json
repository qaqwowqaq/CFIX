{
  "repo": "nanomsg/nng",
  "pull_number": 1082,
  "instance_id": "nanomsg__nng-1082",
  "issue_numbers": [
    "1080"
  ],
  "base_commit": "0ab3403ef9407db4604cbb451c42a179ab807342",
  "patch": "diff --git a/docs/man/CMakeLists.txt b/docs/man/CMakeLists.txt\nindex ad397314d..f357d60ac 100644\n--- a/docs/man/CMakeLists.txt\n+++ b/docs/man/CMakeLists.txt\n@@ -9,417 +9,421 @@\n # found online at https://opensource.org/licenses/MIT.\n \n # We default to off here.\n-option (NNG_ENABLE_DOC \"Enable building documentation.\" OFF)\n+option(NNG_ENABLE_DOC \"Enable building documentation.\" OFF)\n \n if (NNG_ENABLE_DOC)\n-    find_program (ASCIIDOCTOR asciidoctor)\n+    find_program(ASCIIDOCTOR asciidoctor)\n     if (NOT ASCIIDOCTOR)\n-        message (WARNING \"Could not find asciidoctor: skipping docs\")\n-        set (NNG_ENABLE_DOC OFF)\n+        message(WARNING \"Could not find asciidoctor: skipping docs\")\n+        set(NNG_ENABLE_DOC OFF)\n     else ()\n-        message (STATUS \"Using asciidoctor at ${ASCIIDOCTOR}\")\n+        message(STATUS \"Using asciidoctor at ${ASCIIDOCTOR}\")\n     endif ()\n endif ()\n \n if (NNG_ENABLE_DOC)\n-    set (NNG_DOCDIR ${CMAKE_CURRENT_SOURCE_DIR})\n+    set(NNG_DOCDIR ${CMAKE_CURRENT_SOURCE_DIR})\n \n-    set (NNG_A2M ${ASCIIDOCTOR} -b manpage -amanmanual='NNG Reference Manual')\n-    set (NNG_A2H ${ASCIIDOCTOR} -a nofooter -atoc=left -aicons=font -d manpage -b html5)\n+    set(NNG_A2M ${ASCIIDOCTOR} -b manpage -amanmanual='NNG Reference Manual')\n+    set(NNG_A2H ${ASCIIDOCTOR} -a nofooter -atoc=left -aicons=font -d manpage -b html5)\n \n-    macro (nng_man NAME SECT)\n+    macro(nng_man NAME SECT)\n \n-    add_custom_command (\n-        OUTPUT ${NAME}.${SECT}\n-        COMMAND ${NNG_A2M} -o ${NAME}.${SECT} ${NNG_DOCDIR}/${NAME}.${SECT}.adoc\n-        MAIN_DEPENDENCY ${NNG_DOCDIR}/${NAME}.${SECT}.adoc\n-    )\n+        add_custom_command(\n+                OUTPUT ${NAME}.${SECT}\n+                COMMAND ${NNG_A2M} -o ${NAME}.${SECT} ${NNG_DOCDIR}/${NAME}.${SECT}.adoc\n+                MAIN_DEPENDENCY ${NNG_DOCDIR}/${NAME}.${SECT}.adoc\n+        )\n \n-    add_custom_command (\n-        OUTPUT ${NAME}.${SECT}.html\n-        COMMAND ${NNG_A2H} -o ${NAME}.${SECT}.html ${NNG_DOCDIR}/${NAME}.${SECT}.adoc\n-        MAIN_DEPENDENCY ${NNG_DOCDIR}/${NAME}.${SECT}.adoc\n-    )\n+        add_custom_command(\n+                OUTPUT ${NAME}.${SECT}.html\n+                COMMAND ${NNG_A2H} -o ${NAME}.${SECT}.html ${NNG_DOCDIR}/${NAME}.${SECT}.adoc\n+                MAIN_DEPENDENCY ${NNG_DOCDIR}/${NAME}.${SECT}.adoc\n+        )\n \n-    set(NNG_MANS ${NNG_MANS} ${NAME}.${SECT})\n-    set(NNG_HTMLS ${NNG_HTMLS} ${NAME}.${SECT}.html)\n+        set(NNG_MANS ${NNG_MANS} ${NAME}.${SECT})\n+        set(NNG_HTMLS ${NNG_HTMLS} ${NAME}.${SECT}.html)\n \n-    install (\n-        FILES ${CMAKE_CURRENT_BINARY_DIR}/${NAME}.${SECT}.html\n-        DESTINATION ${CMAKE_INSTALL_DOCDIR}\n-    )\n-    install (\n-        FILES ${CMAKE_CURRENT_BINARY_DIR}/${NAME}.${SECT}\n-        DESTINATION ${CMAKE_INSTALL_MANDIR}/man${SECT}\n-    )\n+        install(\n+                FILES ${CMAKE_CURRENT_BINARY_DIR}/${NAME}.${SECT}.html\n+                DESTINATION ${CMAKE_INSTALL_DOCDIR}\n+        )\n+        install(\n+                FILES ${CMAKE_CURRENT_BINARY_DIR}/${NAME}.${SECT}\n+                DESTINATION ${CMAKE_INSTALL_MANDIR}/man${SECT}\n+        )\n \n-    endmacro (nng_man)\n+    endmacro(nng_man)\n \n-    set (NNG_MAN1\n-\tnngcat\n-    )\n+    set(NNG_MAN1\n+            nngcat\n+            )\n \n-    set (NNG_MAN3\n-\tlibnng\n-\tnng_aio_abort\n-\tnng_aio_alloc\n-\tnng_aio_begin\n-\tnng_aio_cancel\n-\tnng_aio_count\n-\tnng_aio_defer\n-\tnng_aio_finish\n-\tnng_aio_free\n-\tnng_aio_get_input\n-\tnng_aio_get_msg\n-\tnng_aio_get_output\n-\tnng_aio_result\n-\tnng_aio_set_input\n-\tnng_aio_set_iov\n-\tnng_aio_set_msg\n-\tnng_aio_set_output\n-\tnng_aio_set_timeout\n-\tnng_aio_stop\n-\tnng_aio_wait\n-\tnng_alloc\n-\tnng_bus_open\n-\tnng_close\n-\tnng_ctx_close\n-\tnng_ctx_get\n-\tnng_ctx_getopt\n-\tnng_ctx_id\n-\tnng_ctx_open\n-\tnng_ctx_recv\n-\tnng_ctx_send\n-\tnng_ctx_set\n-\tnng_ctx_setopt\n-\tnng_device\n-\tnng_dial\n-\tnng_dialer_close\n-\tnng_dialer_create\n-\tnng_dialer_get\n-\tnng_dialer_getopt\n-\tnng_dialer_id\n-\tnng_dialer_set\n-\tnng_dialer_setopt\n-\tnng_dialer_start\n-\tnng_free\n-\tnng_getopt\n-\tnng_inproc_register\n-\tnng_ipc_register\n-\tnng_listen\n-\tnng_listener_close\n-\tnng_listener_create\n-\tnng_listener_get\n-\tnng_listener_getopt\n-\tnng_listener_id\n-\tnng_listener_set\n-\tnng_listener_setopt\n-\tnng_listener_start\n-\tnng_msg_alloc\n-\tnng_msg_append\n-\tnng_msg_body\n-\tnng_msg_chop\n-\tnng_msg_clear\n-\tnng_msg_dup\n-\tnng_msg_free\n-\tnng_msg_get_pipe\n-\tnng_msg_header\n-\tnng_msg_header_append\n-\tnng_msg_header_chop\n-\tnng_msg_header_clear\n-\tnng_msg_header_insert\n-\tnng_msg_header_len\n-\tnng_msg_header_trim\n-\tnng_msg_insert\n-\tnng_msg_len\n-\tnng_msg_realloc\n-\tnng_msg_set_pipe\n-\tnng_msg_trim\n-\tnng_pair_open\n-\tnng_pipe_close\n-\tnng_pipe_dialer\n-\tnng_pipe_get\n-\tnng_pipe_getopt\n-\tnng_pipe_id\n-\tnng_pipe_listener\n-\tnng_pipe_notify\n-\tnng_pipe_socket\n-\tnng_pub_open\n-\tnng_pull_open\n-\tnng_push_open\n-\tnng_recv\n-\tnng_recv_aio\n-\tnng_recvmsg\n-\tnng_rep_open\n-\tnng_req_open\n-\tnng_respondent_open\n-\tnng_send\n-\tnng_send_aio\n-\tnng_sendmsg\n-\tnng_setopt\n-\tnng_sleep_aio\n-\tnng_socket_id\n-\tnng_socket_get\n-\tnng_socket_set\n-\tnng_stats_free\n-\tnng_stats_get\n-\tnng_stat_child\n-\tnng_stat_desc\n-\tnng_stat_name\n-\tnng_stat_next\n-\tnng_stat_string\n-\tnng_stat_timestamp\n-\tnng_stat_type\n-\tnng_stat_unit\n-\tnng_stat_value\n-\tnng_strdup\n-\tnng_strerror\n-\tnng_strfree\n-\tnng_sub_open\n-\tnng_surveyor_open\n-\tnng_tcp_register\n-\tnng_tls_register\n-\tnng_url_clone\n-\tnng_url_free\n-\tnng_url_parse\n-\tnng_version\n-\tnng_ws_register\n-\tnng_wss_register\n-\tnng_zt_register\n-    )\n+    set(NNG_MAN3\n+            libnng\n+            nng_aio_abort\n+            nng_aio_alloc\n+            nng_aio_begin\n+            nng_aio_cancel\n+            nng_aio_count\n+            nng_aio_defer\n+            nng_aio_finish\n+            nng_aio_free\n+            nng_aio_get_input\n+            nng_aio_get_msg\n+            nng_aio_get_output\n+            nng_aio_result\n+            nng_aio_set_input\n+            nng_aio_set_iov\n+            nng_aio_set_msg\n+            nng_aio_set_output\n+            nng_aio_set_timeout\n+            nng_aio_stop\n+            nng_aio_wait\n+            nng_alloc\n+            nng_bus_open\n+            nng_close\n+            nng_ctx_close\n+            nng_ctx_get\n+            nng_ctx_getopt\n+            nng_ctx_id\n+            nng_ctx_open\n+            nng_ctx_recv\n+            nng_ctx_send\n+            nng_ctx_set\n+            nng_ctx_setopt\n+            nng_device\n+            nng_dial\n+            nng_dialer_close\n+            nng_dialer_create\n+            nng_dialer_get\n+            nng_dialer_getopt\n+            nng_dialer_id\n+            nng_dialer_set\n+            nng_dialer_setopt\n+            nng_dialer_start\n+            nng_free\n+            nng_getopt\n+            nng_inproc_register\n+            nng_ipc_register\n+            nng_listen\n+            nng_listener_close\n+            nng_listener_create\n+            nng_listener_get\n+            nng_listener_getopt\n+            nng_listener_id\n+            nng_listener_set\n+            nng_listener_setopt\n+            nng_listener_start\n+            nng_msg_alloc\n+            nng_msg_append\n+            nng_msg_body\n+            nng_msg_chop\n+            nng_msg_clear\n+            nng_msg_dup\n+            nng_msg_free\n+            nng_msg_get_pipe\n+            nng_msg_header\n+            nng_msg_header_append\n+            nng_msg_header_chop\n+            nng_msg_header_clear\n+            nng_msg_header_insert\n+            nng_msg_header_len\n+            nng_msg_header_trim\n+            nng_msg_insert\n+            nng_msg_len\n+            nng_msg_realloc\n+            nng_msg_set_pipe\n+            nng_msg_trim\n+            nng_pair_open\n+            nng_pipe_close\n+            nng_pipe_dialer\n+            nng_pipe_get\n+            nng_pipe_getopt\n+            nng_pipe_id\n+            nng_pipe_listener\n+            nng_pipe_notify\n+            nng_pipe_socket\n+            nng_pub_open\n+            nng_pull_open\n+            nng_push_open\n+            nng_recv\n+            nng_recv_aio\n+            nng_recvmsg\n+            nng_rep_open\n+            nng_req_open\n+            nng_respondent_open\n+            nng_send\n+            nng_send_aio\n+            nng_sendmsg\n+            nng_setopt\n+            nng_sleep_aio\n+            nng_socket_id\n+            nng_socket_get\n+            nng_socket_set\n+            nng_stats_free\n+            nng_stats_get\n+            nng_stat_child\n+            nng_stat_desc\n+            nng_stat_find\n+            nng_stat_find_dialer\n+            nng_stat_find_listener\n+            nng_stat_find_socket\n+            nng_stat_name\n+            nng_stat_next\n+            nng_stat_string\n+            nng_stat_timestamp\n+            nng_stat_type\n+            nng_stat_unit\n+            nng_stat_value\n+            nng_strdup\n+            nng_strerror\n+            nng_strfree\n+            nng_sub_open\n+            nng_surveyor_open\n+            nng_tcp_register\n+            nng_tls_register\n+            nng_url_clone\n+            nng_url_free\n+            nng_url_parse\n+            nng_version\n+            nng_ws_register\n+            nng_wss_register\n+            nng_zt_register\n+            )\n \n     set(NNG_MAN3COMPAT\n-\tnn_allocmsg\n-\tnn_bind\n-\tnn_close\n-\tnn_cmsg\n-\tnn_connect\n-\tnn_device\n-\tnn_errno\n-\tnn_freemsg\n-\tnn_get_statistic\n-\tnn_getsockopt\n-\tnn_poll\n-\tnn_reallocmsg\n-\tnn_recv\n-\tnn_recvmsg\n-\tnn_send\n-\tnn_sendmsg\n-\tnn_setsockopt\n-\tnn_shutdown\n-\tnn_socket\n-\tnn_strerror\n-\tnn_term\n-\tnng_compat\n-    )\n+            nn_allocmsg\n+            nn_bind\n+            nn_close\n+            nn_cmsg\n+            nn_connect\n+            nn_device\n+            nn_errno\n+            nn_freemsg\n+            nn_get_statistic\n+            nn_getsockopt\n+            nn_poll\n+            nn_reallocmsg\n+            nn_recv\n+            nn_recvmsg\n+            nn_send\n+            nn_sendmsg\n+            nn_setsockopt\n+            nn_shutdown\n+            nn_socket\n+            nn_strerror\n+            nn_term\n+            nng_compat\n+            )\n \n     set(NNG_MAN3HTTP\n-\tnng_http_client_alloc\n-\tnng_http_client_connect\n-\tnng_http_client_free\n-\tnng_http_client_get_tls\n-\tnng_http_client_set_tls\n-\tnng_http_client_transact\n-\tnng_http_conn_close\n-\tnng_http_conn_read\n-\tnng_http_conn_read_all\n-\tnng_http_conn_read_req\n-\tnng_http_conn_read_res\n-\tnng_http_conn_transact\n-\tnng_http_conn_write\n-\tnng_http_conn_write_all\n-\tnng_http_conn_write_req\n-\tnng_http_conn_write_res\n-\tnng_http_handler_alloc\n-\tnng_http_handler_free\n-\tnng_http_handler_get_data\n-\tnng_http_handler_set_data\n-\tnng_http_handler_set_host\n-\tnng_http_handler_set_method\n-\tnng_http_handler_set_tree\n-\tnng_http_hijack\n-\tnng_http_req_add_header\n-\tnng_http_req_alloc\n-\tnng_http_req_copy_data\n-\tnng_http_req_del_header\n-\tnng_http_req_free\n-\tnng_http_req_get_data\n-\tnng_http_req_get_header\n-\tnng_http_req_get_method\n-\tnng_http_req_get_uri\n-\tnng_http_req_get_version\n-\tnng_http_req_reset\n-\tnng_http_req_set_data\n-\tnng_http_req_set_header\n-\tnng_http_req_set_method\n-\tnng_http_req_set_uri\n-\tnng_http_req_set_version\n-\tnng_http_res_add_header\n-\tnng_http_res_alloc\n-\tnng_http_res_alloc_error\n-\tnng_http_res_copy_data\n-\tnng_http_res_del_header\n-\tnng_http_res_free\n-\tnng_http_res_get_data\n-\tnng_http_res_get_header\n-\tnng_http_res_get_reason\n-\tnng_http_res_get_status\n-\tnng_http_res_get_version\n-\tnng_http_res_reset\n-\tnng_http_res_set_data\n-\tnng_http_res_set_header\n-\tnng_http_res_set_reason\n-\tnng_http_res_set_status\n-\tnng_http_res_set_version\n-\tnng_http_server_add_handler\n-\tnng_http_server_del_handler\n-\tnng_http_server_get_addr\n-\tnng_http_server_get_tls\n-\tnng_http_server_hold\n-\tnng_http_server_release\n-\tnng_http_server_set_tls\n-\tnng_http_server_start\n-\tnng_http_server_stop\n-    )\n+            nng_http_client_alloc\n+            nng_http_client_connect\n+            nng_http_client_free\n+            nng_http_client_get_tls\n+            nng_http_client_set_tls\n+            nng_http_client_transact\n+            nng_http_conn_close\n+            nng_http_conn_read\n+            nng_http_conn_read_all\n+            nng_http_conn_read_req\n+            nng_http_conn_read_res\n+            nng_http_conn_transact\n+            nng_http_conn_write\n+            nng_http_conn_write_all\n+            nng_http_conn_write_req\n+            nng_http_conn_write_res\n+            nng_http_handler_alloc\n+            nng_http_handler_free\n+            nng_http_handler_get_data\n+            nng_http_handler_set_data\n+            nng_http_handler_set_host\n+            nng_http_handler_set_method\n+            nng_http_handler_set_tree\n+            nng_http_hijack\n+            nng_http_req_add_header\n+            nng_http_req_alloc\n+            nng_http_req_copy_data\n+            nng_http_req_del_header\n+            nng_http_req_free\n+            nng_http_req_get_data\n+            nng_http_req_get_header\n+            nng_http_req_get_method\n+            nng_http_req_get_uri\n+            nng_http_req_get_version\n+            nng_http_req_reset\n+            nng_http_req_set_data\n+            nng_http_req_set_header\n+            nng_http_req_set_method\n+            nng_http_req_set_uri\n+            nng_http_req_set_version\n+            nng_http_res_add_header\n+            nng_http_res_alloc\n+            nng_http_res_alloc_error\n+            nng_http_res_copy_data\n+            nng_http_res_del_header\n+            nng_http_res_free\n+            nng_http_res_get_data\n+            nng_http_res_get_header\n+            nng_http_res_get_reason\n+            nng_http_res_get_status\n+            nng_http_res_get_version\n+            nng_http_res_reset\n+            nng_http_res_set_data\n+            nng_http_res_set_header\n+            nng_http_res_set_reason\n+            nng_http_res_set_status\n+            nng_http_res_set_version\n+            nng_http_server_add_handler\n+            nng_http_server_del_handler\n+            nng_http_server_get_addr\n+            nng_http_server_get_tls\n+            nng_http_server_hold\n+            nng_http_server_release\n+            nng_http_server_set_tls\n+            nng_http_server_start\n+            nng_http_server_stop\n+            )\n \n     set(NNG_MAN3SUPP\n-\tnng_clock\n-\tnng_cv_alloc\n-\tnng_cv_free\n-\tnng_cv_until\n-\tnng_cv_wait\n-\tnng_cv_wake\n-\tnng_cv_wake1\n-\tnng_msleep\n-\tnng_mtx_alloc\n-\tnng_mtx_free\n-\tnng_mtx_lock\n-\tnng_mtx_unlock\n-\tnng_opts_parse\n-\tnng_random\n-\tnng_thread_create\n-\tnng_thread_destroy\n-    )\n+            nng_clock\n+            nng_cv_alloc\n+            nng_cv_free\n+            nng_cv_until\n+            nng_cv_wait\n+            nng_cv_wake\n+            nng_cv_wake1\n+            nng_msleep\n+            nng_mtx_alloc\n+            nng_mtx_free\n+            nng_mtx_lock\n+            nng_mtx_unlock\n+            nng_opts_parse\n+            nng_random\n+            nng_thread_create\n+            nng_thread_destroy\n+            )\n \n     set(NNG_MAN3STR\n-        nng_stream_close\n-\tnng_stream_free\n-\tnng_stream_get\n-\tnng_stream_recv\n-\tnng_stream_send\n-\tnng_stream_set\n-    \tnng_stream_dialer_alloc\n-\tnng_stream_dialer_close\n-\tnng_stream_dialer_dial\n-\tnng_stream_dialer_free\n-\tnng_stream_dialer_get\n-\tnng_stream_dialer_set\n-\tnng_stream_listener_accept\n-\tnng_stream_listener_alloc\n-\tnng_stream_listener_close\n-\tnng_stream_listener_free\n-\tnng_stream_listener_get\n-\tnng_stream_listener_listen\n-\tnng_stream_listener_set\n-    )\n+            nng_stream_close\n+            nng_stream_free\n+            nng_stream_get\n+            nng_stream_recv\n+            nng_stream_send\n+            nng_stream_set\n+            nng_stream_dialer_alloc\n+            nng_stream_dialer_close\n+            nng_stream_dialer_dial\n+            nng_stream_dialer_free\n+            nng_stream_dialer_get\n+            nng_stream_dialer_set\n+            nng_stream_listener_accept\n+            nng_stream_listener_alloc\n+            nng_stream_listener_close\n+            nng_stream_listener_free\n+            nng_stream_listener_get\n+            nng_stream_listener_listen\n+            nng_stream_listener_set\n+            )\n \n     set(NNG_MAN3TLS\n-\tnng_tls_config_alloc\n-\tnng_tls_config_auth_mode\n-\tnng_tls_config_ca_chain\n-\tnng_tls_config_ca_file\n-\tnng_tls_config_cert_key_file\n-\tnng_tls_config_free\n-\tnng_tls_config_hold\n-\tnng_tls_config_own_cert\n-\tnng_tls_config_server_name\n-    )\n+            nng_tls_config_alloc\n+            nng_tls_config_auth_mode\n+            nng_tls_config_ca_chain\n+            nng_tls_config_ca_file\n+            nng_tls_config_cert_key_file\n+            nng_tls_config_free\n+            nng_tls_config_hold\n+            nng_tls_config_own_cert\n+            nng_tls_config_server_name\n+            )\n \n     set(NNG_MAN5\n-\tnng_aio\n-\tnng_ctx\n-\tnng_dialer\n-\tnng_duration\n-\tnng_iov\n-\tnng_listener\n-\tnng_msg\n-\tnng_options\n-\tnng_pipe\n-\tnng_sockaddr\n-\tnng_sockaddr_in\n-\tnng_sockaddr_in6\n-\tnng_sockaddr_inproc\n-\tnng_sockaddr_ipc\n-\tnng_sockaddr_zt\n-\tnng_socket\n-\tnng_stat\n+            nng_aio\n+            nng_ctx\n+            nng_dialer\n+            nng_duration\n+            nng_iov\n+            nng_listener\n+            nng_msg\n+            nng_options\n+            nng_pipe\n+            nng_sockaddr\n+            nng_sockaddr_in\n+            nng_sockaddr_in6\n+            nng_sockaddr_inproc\n+            nng_sockaddr_ipc\n+            nng_sockaddr_zt\n+            nng_socket\n+            nng_stat\n \n-\tnng_stream\n-\tnng_stream_dialer\n-\tnng_stream_listener\n+            nng_stream\n+            nng_stream_dialer\n+            nng_stream_listener\n \n-\tnng_tcp_options\n-\tnng_ipc_options\n-\tnng_tls_config\n-\tnng_tls_options\n-    )\n+            nng_tcp_options\n+            nng_ipc_options\n+            nng_tls_config\n+            nng_tls_options\n+            )\n \n     set(NNG_MAN7\n-\tnng\n-\tnng_bus\n-\tnng_inproc\n-\tnng_ipc\n-\tnng_pair\n-\tnng_pub\n-\tnng_pull\n-\tnng_push\n-\tnng_rep\n-\tnng_req\n-\tnng_respondent\n-\tnng_sub\n-\tnng_surveyor\n-\tnng_tcp\n-\tnng_tls\n-\tnng_ws\n-\tnng_zerotier\n-    )\n+            nng\n+            nng_bus\n+            nng_inproc\n+            nng_ipc\n+            nng_pair\n+            nng_pub\n+            nng_pull\n+            nng_push\n+            nng_rep\n+            nng_req\n+            nng_respondent\n+            nng_sub\n+            nng_surveyor\n+            nng_tcp\n+            nng_tls\n+            nng_ws\n+            nng_zerotier\n+            )\n \n-    foreach(F ${NNG_MAN1})\n+    foreach (F ${NNG_MAN1})\n         nng_man(${F} 1)\n-    endforeach()\n+    endforeach ()\n \n-    foreach(F ${NNG_MAN3})\n+    foreach (F ${NNG_MAN3})\n         nng_man(${F} 3)\n-    endforeach()\n+    endforeach ()\n \n-    foreach(F ${NNG_MAN3COMPAT})\n+    foreach (F ${NNG_MAN3COMPAT})\n         nng_man(${F} 3compat)\n-    endforeach()\n+    endforeach ()\n \n-    foreach(F ${NNG_MAN3HTTP})\n+    foreach (F ${NNG_MAN3HTTP})\n         nng_man(${F} 3http)\n-    endforeach()\n+    endforeach ()\n \n-    foreach(F ${NNG_MAN3STR})\n+    foreach (F ${NNG_MAN3STR})\n         nng_man(${F} 3str)\n-    endforeach()\n+    endforeach ()\n \n-    foreach(F ${NNG_MAN3SUPP})\n+    foreach (F ${NNG_MAN3SUPP})\n         nng_man(${F} 3supp)\n-    endforeach()\n+    endforeach ()\n \n-    foreach(F ${NNG_MAN3TLS})\n+    foreach (F ${NNG_MAN3TLS})\n         nng_man(${F} 3tls)\n-    endforeach()\n+    endforeach ()\n \n-    foreach(F ${NNG_MAN5})\n+    foreach (F ${NNG_MAN5})\n         nng_man(${F} 5)\n-    endforeach()\n+    endforeach ()\n \n-    foreach(F ${NNG_MAN7})\n+    foreach (F ${NNG_MAN7})\n         nng_man(${F} 7)\n-    endforeach()\n+    endforeach ()\n \n-    add_custom_target (man ALL DEPENDS ${NNG_MANS})\n-    add_custom_target (html ALL DEPENDS ${NNG_HTMLS})\n+    add_custom_target(man ALL DEPENDS ${NNG_MANS})\n+    add_custom_target(html ALL DEPENDS ${NNG_HTMLS})\n endif ()\ndiff --git a/docs/man/libnng.3.adoc b/docs/man/libnng.3.adoc\nindex 35c9b0f4a..4e59890f5 100644\n--- a/docs/man/libnng.3.adoc\n+++ b/docs/man/libnng.3.adoc\n@@ -240,6 +240,10 @@ to observe program behaviors and as an aid in troubleshooting.\n |===\n |xref:nng_stat_child.3.adoc[nng_stat_child()]|get child statistic\n |xref:nng_stat_desc.3.adoc[nng_stat_name()]|get statistic description\n+|xref:nng_stat_find.3.adoc[nng_stat_find()]|find statistic by name\n+|xref:nng_stat_find_dialer.3.adoc[nng_stat_find_dialer()]|find dialer statistics\n+|xref:nng_stat_find_listener.3.adoc[nng_stat_find_listener()]|find listener statistics\n+|xref:nng_stat_find_socket.3.adoc[nng_stat_find_socket()]|find socket statistics\n |xref:nng_stat_name.3.adoc[nng_stat_name()]|get statistic name\n |xref:nng_stat_next.3.adoc[nng_stat_next()]|get next statistic\n |xref:nng_stat_string.3.adoc[nng_stat_string()]|get statistic string value\ndiff --git a/docs/man/nng_stat.5.adoc b/docs/man/nng_stat.5.adoc\nindex 4382e4b03..0b6493080 100644\n--- a/docs/man/nng_stat.5.adoc\n+++ b/docs/man/nng_stat.5.adoc\n@@ -68,6 +68,10 @@ xref:nng_stats_free.3.adoc[nng_stats_free(3)],\n xref:nng_stats_get.3.adoc[nng_stats_get(3)],\n xref:nng_stat_child.3.adoc[nng_stat_child(3)],\n xref:nng_stat_desc.3.adoc[nng_stat_desc(3)],\n+xref:nng_stat_find.3.adoc[nng_stat_find(3)],\n+xref:nng_stat_find_dialer.3.adoc[nng_stat_find_dialer(3)],\n+xref:nng_stat_find_listener.3.adoc[nng_stat_find_listener(3)],\n+xref:nng_stat_find_socket.3.adoc[nng_stat_find_socket(3)],\n xref:nng_stat_name.3.adoc[nng_stat_name(3)],\n xref:nng_stat_next.3.adoc[nng_stat_next(3)],\n xref:nng_stat_string.3.adoc[nng_stat_string(3)],\ndiff --git a/docs/man/nng_stat_find.adoc b/docs/man/nng_stat_find.adoc\nnew file mode 100644\nindex 000000000..4f4103eaf\n--- /dev/null\n+++ b/docs/man/nng_stat_find.adoc\n@@ -0,0 +1,52 @@\n+= nng_stat_find(3)\n+//\n+// Copyright 2019 Staysail Systems, Inc. <info@staysail.tech>\n+//\n+// This document is supplied under the terms of the MIT License, a\n+// copy of which should be located in the distribution where this\n+// file was obtained (LICENSE.txt).  A copy of the license may also be\n+// found online at https://opensource.org/licenses/MIT.\n+//\n+\n+== NAME\n+\n+nng_stat_find - find statistic by name\n+\n+== SYNOPSIS\n+\n+[source,c]\n+----\n+#include <nng/nng.h>\n+\n+typedef struct nng_stat nng_stat;\n+\n+nng_stat *nng_stat_find(nng_stat *stat, const char *name);\n+----\n+\n+== DESCRIPTION\n+\n+The `nng_stat_find()` function searches the statistics tree _stat_, looking for a statistic whose name is _name_.\n+If it finds one, it returns it.\n+Otherwise `NULL` is returned.\n+\n+NOTE: If multiple statistics have that name, then only the first match is returned.\n+\n+== RETURN VALUES\n+\n+The matching statistic, or NULL if no match is found.\n+\n+== ERRORS\n+\n+None.\n+\n+== SEE ALSO\n+\n+[.text-left]\n+xref:libnng.3.adoc[libnng(3)],\n+xref:nng_stat_child.3.adoc[nng_stat_child(3)],\n+xref:nng_stat_find_dialer.3.adoc[nng_stat_find_dialer(3)],\n+xref:nng_stat_find_listener.3.adoc[nng_stat_find_listner(3)],\n+xref:nng_stat_find_socket.3.adoc[nng_stat_find_socket(3)],\n+xref:nng_stats_get.3.adoc[nng_stats_get(3)],\n+xref:nng_stat.5.adoc[nng_stat(5)],\n+xref:nng.7.adoc[nng(7)]\ndiff --git a/docs/man/nng_stat_find_dialer.adoc b/docs/man/nng_stat_find_dialer.adoc\nnew file mode 100644\nindex 000000000..b0df247aa\n--- /dev/null\n+++ b/docs/man/nng_stat_find_dialer.adoc\n@@ -0,0 +1,56 @@\n+= nng_stat_find_socket(3)\n+//\n+// Copyright 2019 Staysail Systems, Inc. <info@staysail.tech>\n+//\n+// This document is supplied under the terms of the MIT License, a\n+// copy of which should be located in the distribution where this\n+// file was obtained (LICENSE.txt).  A copy of the license may also be\n+// found online at https://opensource.org/licenses/MIT.\n+//\n+\n+== NAME\n+\n+nng_stat_find_dialer - find dialer statistics\n+\n+== SYNOPSIS\n+\n+[source,c]\n+----\n+#include <nng/nng.h>\n+\n+typedef struct nng_stat nng_stat;\n+typedef struct nng_dialer nng_dialer;\n+\n+nng_stat *nng_stat_find_dialer(nng_stat *stat, nng_dialer dialer);\n+----\n+\n+== DESCRIPTION\n+\n+The `nng_stat_find_dialer()` function returns the statistics tree within _stat_ associated with the dialer _dialer_, if such a tree exists.\n+Otherwise `NULL` is returned.\n+\n+Generally, there will be child statistics of the returned value, each corresponding to a specific metric.\n+These can be further scanned using either\n+xref:nng_stat_find.3.adoc[nng_stat_find(3)]\n+or by walking the tree with\n+xref:nng_stat_child.3.adoc[nng_stat_child(3)].\n+\n+== RETURN VALUES\n+\n+The matching statistic, or NULL if no match is found.\n+\n+== ERRORS\n+\n+None.\n+\n+== SEE ALSO\n+\n+[.text-left]\n+xref:libnng.3.adoc[libnng(3)],\n+xref:nng_stat_child.3.adoc[nng_stat_child(3)],\n+xref:nng_stat_find.3.adoc[nng_stat_find(3)],\n+xref:nng_stat_find_listener.3.adoc[nng_stat_find_listener(3)],\n+xref:nng_stat_find_socket.3.adoc[nng_stat_find_socket(3)],\n+xref:nng_stats_get.3.adoc[nng_stats_get(3)],\n+xref:nng_stat.5.adoc[nng_stat(5)],\n+xref:nng.7.adoc[nng(7)]\ndiff --git a/docs/man/nng_stat_find_listener.adoc b/docs/man/nng_stat_find_listener.adoc\nnew file mode 100644\nindex 000000000..2a099b1b9\n--- /dev/null\n+++ b/docs/man/nng_stat_find_listener.adoc\n@@ -0,0 +1,56 @@\n+= nng_stat_find_listener(3)\n+//\n+// Copyright 2019 Staysail Systems, Inc. <info@staysail.tech>\n+//\n+// This document is supplied under the terms of the MIT License, a\n+// copy of which should be located in the distribution where this\n+// file was obtained (LICENSE.txt).  A copy of the license may also be\n+// found online at https://opensource.org/licenses/MIT.\n+//\n+\n+== NAME\n+\n+nng_stat_find_listener - find listener statistics\n+\n+== SYNOPSIS\n+\n+[source,c]\n+----\n+#include <nng/nng.h>\n+\n+typedef struct nng_stat nng_stat;\n+typedef struct nng_listener nng_listener;\n+\n+nng_stat *nng_stat_find_listener(nng_stat *stat, nng_listener listener);\n+----\n+\n+== DESCRIPTION\n+\n+The `nng_stat_find_listener()` function returns the statistics tree within _stat_ associated with the listener _listener_, if such a tree exists.\n+Otherwise `NULL` is returned.\n+\n+Generally, there will be child statistics of the returned value, each corresponding to a specific metric.\n+These can be further scanned using either\n+xref:nng_stat_find.3.adoc[nng_stat_find(3)]\n+or by walking the tree with\n+xref:nng_stat_child.3.adoc[nng_stat_child(3)].\n+\n+== RETURN VALUES\n+\n+The matching statistic, or NULL if no match is found.\n+\n+== ERRORS\n+\n+None.\n+\n+== SEE ALSO\n+\n+[.text-left]\n+xref:libnng.3.adoc[libnng(3)],\n+xref:nng_stat_child.3.adoc[nng_stat_child(3)],\n+xref:nng_stat_find.3.adoc[nng_stat_find(3)],\n+xref:nng_stat_find_dialer.3.adoc[nng_stat_find_dialer(3)],\n+xref:nng_stat_find_socket.3.adoc[nng_stat_find_socket(3)],\n+xref:nng_stats_get.3.adoc[nng_stats_get(3)],\n+xref:nng_stat.5.adoc[nng_stat(5)],\n+xref:nng.7.adoc[nng(7)]\ndiff --git a/docs/man/nng_stat_find_socket.adoc b/docs/man/nng_stat_find_socket.adoc\nnew file mode 100644\nindex 000000000..eb03d5ea5\n--- /dev/null\n+++ b/docs/man/nng_stat_find_socket.adoc\n@@ -0,0 +1,56 @@\n+= nng_stat_find_socket(3)\n+//\n+// Copyright 2019 Staysail Systems, Inc. <info@staysail.tech>\n+//\n+// This document is supplied under the terms of the MIT License, a\n+// copy of which should be located in the distribution where this\n+// file was obtained (LICENSE.txt).  A copy of the license may also be\n+// found online at https://opensource.org/licenses/MIT.\n+//\n+\n+== NAME\n+\n+nng_stat_find_socket - find socket statistics\n+\n+== SYNOPSIS\n+\n+[source,c]\n+----\n+#include <nng/nng.h>\n+\n+typedef struct nng_stat nng_stat;\n+typedef struct nng_socket nng_socket;\n+\n+nng_stat *nng_stat_find_socket(nng_stat *stat, nng_socket socket);\n+----\n+\n+== DESCRIPTION\n+\n+The `nng_stat_find_socket()` function returns the statistics tree within _stat_ associated with the socket _socket_, if such a tree exists.\n+Otherwise `NULL` is returned.\n+\n+Generally, there will be child statistics of the returned value, each corresponding to a specific metric.\n+These can be further scanned using either\n+xref:nng_stat_find.3.adoc[nng_stat_find(3)]\n+or by walking the tree with\n+xref:nng_stat_child.3.adoc[nng_stat_child(3)].\n+\n+== RETURN VALUES\n+\n+The matching statistic, or NULL if no match is found.\n+\n+== ERRORS\n+\n+None.\n+\n+== SEE ALSO\n+\n+[.text-left]\n+xref:libnng.3.adoc[libnng(3)],\n+xref:nng_stat_child.3.adoc[nng_stat_child(3)],\n+xref:nng_stat_find.3.adoc[nng_stat_find(3)],\n+xref:nng_stat_find_dialer.3.adoc[nng_stat_find_dialer(3)],\n+xref:nng_stat_find_listener.3.adoc[nng_stat_find_listener(3)],\n+xref:nng_stats_get.3.adoc[nng_stats_get(3)],\n+xref:nng_stat.5.adoc[nng_stat(5)],\n+xref:nng.7.adoc[nng(7)]\ndiff --git a/include/nng/nng.h b/include/nng/nng.h\nindex 0db81ef59..2c9dd8c3e 100644\n--- a/include/nng/nng.h\n+++ b/include/nng/nng.h\n@@ -915,7 +915,7 @@ enum nng_flag_enum {\n // This can be useful when a handler supports an entire directory tree.\n #define NNG_OPT_WS_REQUEST_URI \"ws:request-uri\"\n \n-// NNG_OPT_WS_TXFRAMESZ is used to configure the fragmentation size\n+// NNG_OPT_WS_SENDMAXFRAME is used to configure the fragmentation size\n // used for frames.  This has a default value of 64k.  Large values\n // are good for throughput, but penalize latency.  They also require\n // additional buffering on the peer.  This value must not be larger\n@@ -923,7 +923,7 @@ enum nng_flag_enum {\n // to negotiate this.\n #define NNG_OPT_WS_SENDMAXFRAME \"ws:txframe-max\"\n \n-// NNG_OPT_WS_RXFRAMESZ is the largest frame we will accept.  This should\n+// NNG_OPT_WS_RECVMAXFRAME is the largest frame we will accept.  This should\n // probably not be larger than NNG_OPT_RECVMAXSZ. If the sender attempts\n // to send more data than this in a single message, it will be dropped.\n #define NNG_OPT_WS_RECVMAXFRAME \"ws:rxframe-max\"\n@@ -943,7 +943,7 @@ enum nng_flag_enum {\n // nng_stats_get takes a snapshot of the entire set of statistics.\n // While the operation can be somewhat expensive (allocations), it\n // is done in a way that minimizes impact to running operations.\n-// Note that the statistics are provided as tree, with parents\n+// Note that the statistics are provided as a tree, with parents\n // used for grouping, and with child statistics underneath.  The\n // top stat returned will be of type NNG_STAT_SCOPE with name \"\".\n // Applications may choose to consider this root scope as \"root\", if\n@@ -973,13 +973,25 @@ NNG_DECL nng_stat *nng_stat_child(nng_stat *);\n NNG_DECL const char *nng_stat_name(nng_stat *);\n \n // nng_stat_type is used to determine the type of the statistic.\n-// At present, only NNG_STAT_TYPE_LEVEL and and NNG_STAT_TYPE_COUNTER\n-// are defined.  Counters generally increment, and therefore changes in the\n-// value over time are likely more interesting than the actual level.  Level\n+// Counters generally increment, and therefore changes in the value over\n+// time are likely more interesting than the actual level.  Level\n // values reflect some absolute state however, and should be presented to the\n // user as is.\n NNG_DECL int nng_stat_type(nng_stat *);\n \n+// nng_stat_find is used to find a specific named statistic within\n+// a statistic tree.  NULL is returned if no such statistic exists.\n+NNG_DECL nng_stat *nng_stat_find(nng_stat *, const char *);\n+\n+// nng_stat_find_socket is used to find the stats for the given socket.\n+NNG_DECL nng_stat *nng_stat_find_socket(nng_stat *, nng_socket);\n+\n+// nng_stat_find_dialer is used to find the stats for the given dialer.\n+NNG_DECL nng_stat *nng_stat_find_dialer(nng_stat *, nng_dialer);\n+\n+// nng_stat_find_listener is used to find the stats for the given listener.\n+NNG_DECL nng_stat *nng_stat_find_listener(nng_stat *, nng_listener);\n+\n enum nng_stat_type_enum {\n \tNNG_STAT_SCOPE   = 0, // Stat is for scoping, and carries no value\n \tNNG_STAT_LEVEL   = 1, // Numeric \"absolute\" value, diffs meaningless\ndiff --git a/src/core/stats.c b/src/core/stats.c\nindex 3c200fecd..f9b56858f 100644\n--- a/src/core/stats.c\n+++ b/src/core/stats.c\n@@ -1,5 +1,5 @@\n //\n-// Copyright 2019 Staysail Systems, Inc. <info@staysail.tech>\n+// Copyright 2020 Staysail Systems, Inc. <info@staysail.tech>\n // Copyright 2018 Capitar IT Group BV <info@capitar.com>\n //\n // This software is supplied under the terms of the MIT License, a\n@@ -17,8 +17,8 @@ typedef struct nng_stat nni_stat;\n \n struct nng_stat {\n \tchar *         s_name;\n-\tconst char *   s_desc;\n-\tconst char *   s_string;\n+\tchar *         s_desc;\n+\tchar *         s_string;\n \tuint64_t       s_value;\n \tnni_time       s_time;\n \tnni_stat_type  s_type;\n@@ -181,17 +181,6 @@ nni_stat_set_value(nni_stat_item *stat, uint64_t v)\n #endif\n }\n \n-void\n-nni_stat_set_string(nni_stat_item *stat, const char *str)\n-{\n-#ifdef NNG_ENABLE_STATS\n-\tstat->si_string = str;\n-#else\n-\tNNI_ARG_UNUSED(stat);\n-\tNNI_ARG_UNUSED(str);\n-#endif\n-}\n-\n void\n nni_stat_set_lock(nni_stat_item *stat, nni_mtx *mtx)\n {\n@@ -241,6 +230,8 @@ nng_stats_free(nni_stat *st)\n \t\tnng_stats_free(child);\n \t}\n \tnni_strfree(st->s_name);\n+\tnni_strfree(st->s_desc);\n+\tnni_strfree(st->s_string);\n \tNNI_FREE_STRUCT(st);\n #else\n \tNNI_ARG_UNUSED(st);\n@@ -257,15 +248,21 @@ stat_make_tree(nni_stat_item *item, nni_stat **sp)\n \tif ((stat = NNI_ALLOC_STRUCT(stat)) == NULL) {\n \t\treturn (NNG_ENOMEM);\n \t}\n-\tif ((stat->s_name = nni_strdup(item->si_name)) == NULL) {\n-\t\tNNI_FREE_STRUCT(stat);\n+\tNNI_LIST_INIT(&stat->s_children, nni_stat, s_node);\n+\n+\tif (((stat->s_name = nni_strdup(item->si_name)) == NULL) ||\n+\t    ((stat->s_desc = nni_strdup(item->si_desc)) == NULL)) {\n+\t\tnng_stats_free(stat);\n+\t\treturn (NNG_ENOMEM);\n+\t}\n+\tif ((item->si_type == NNG_STAT_STRING) &&\n+\t    ((stat->s_string = nni_strdup(item->si_string)) == NULL)) {\n+\t\tnng_stats_free(stat);\n \t\treturn (NNG_ENOMEM);\n \t}\n-\tNNI_LIST_INIT(&stat->s_children, nni_stat, s_node);\n \tstat->s_item   = item;\n \tstat->s_type   = item->si_type;\n \tstat->s_unit   = item->si_unit;\n-\tstat->s_desc   = item->si_desc;\n \tstat->s_parent = NULL;\n \n \tNNI_LIST_FOREACH (&item->si_children, child) {\n@@ -300,9 +297,8 @@ stat_update(nni_stat *stat)\n \tif (item->si_update != NULL) {\n \t\titem->si_update(item, item->si_private);\n \t}\n-\tstat->s_value  = item->si_number;\n-\tstat->s_string = item->si_string;\n-\tstat->s_time   = nni_clock();\n+\tstat->s_value = item->si_number;\n+\tstat->s_time  = nni_clock();\n }\n \n static void\n@@ -418,6 +414,49 @@ nng_stat_desc(nng_stat *stat)\n \treturn (stat->s_desc);\n }\n \n+nng_stat *\n+nng_stat_find(nng_stat *stat, const char *name)\n+{\n+\tnng_stat *child;\n+\tif (stat == NULL) {\n+\t\treturn (NULL);\n+\t}\n+\tif (strcmp(name, stat->s_name) == 0) {\n+\t\treturn (stat);\n+\t}\n+\tNNI_LIST_FOREACH(&stat->s_children, child) {\n+\t\tnng_stat *result;\n+\t\tif ((result = nng_stat_find(child, name)) != NULL) {\n+\t\t\treturn (result);\n+\t\t}\n+\t}\n+\treturn (NULL);\n+}\n+\n+nng_stat *\n+nng_stat_find_socket(nng_stat *stat, nng_socket s)\n+{\n+\tchar name[16];\n+\t(void) snprintf(name, sizeof (name), \"socket%d\", nng_socket_id(s));\n+\treturn (nng_stat_find(stat, name));\n+}\n+\n+nng_stat *\n+nng_stat_find_dialer(nng_stat *stat, nng_dialer d)\n+{\n+\tchar name[16];\n+\t(void) snprintf(name, sizeof (name), \"dialer%d\", nng_dialer_id(d));\n+\treturn (nng_stat_find(stat, name));\n+}\n+\n+nng_stat *\n+nng_stat_find_listener(nng_stat *stat, nng_listener l)\n+{\n+\tchar name[16];\n+\t(void) snprintf(name, sizeof (name), \"listener%d\", nng_listener_id(l));\n+\treturn (nng_stat_find(stat, name));\n+}\n+\n int\n nni_stat_sys_init(void)\n {\n@@ -427,7 +466,6 @@ nni_stat_sys_init(void)\n \tstats_root.si_name = \"\";\n \tstats_root.si_desc = \"all statistics\";\n #endif\n-\n \treturn (0);\n }\n \ndiff --git a/src/core/stats.h b/src/core/stats.h\nindex 12dbbbdd7..a9ea6e13e 100644\n--- a/src/core/stats.h\n+++ b/src/core/stats.h\n@@ -1,5 +1,5 @@\n //\n-// Copyright 2018 Staysail Systems, Inc. <info@staysail.tech>\n+// Copyright 2019 Staysail Systems, Inc. <info@staysail.tech>\n // Copyright 2018 Capitar IT Group BV <info@capitar.com>\n //\n // This software is supplied under the terms of the MIT License, a\n@@ -66,7 +66,6 @@ void nni_stat_register(nni_stat_item *);\n void nni_stat_unregister(nni_stat_item *);\n \n void nni_stat_set_value(nni_stat_item *, uint64_t);\n-void nni_stat_set_string(nni_stat_item *, const char *);\n void nni_stat_set_lock(nni_stat_item *, nni_mtx *);\n void nni_stat_set_update(nni_stat_item *, nni_stat_update, void *);\n \ndiff --git a/src/platform/windows/win_udp.c b/src/platform/windows/win_udp.c\nindex e3e5a3691..95ff2eb8c 100644\n--- a/src/platform/windows/win_udp.c\n+++ b/src/platform/windows/win_udp.c\n@@ -1,5 +1,5 @@\n //\n-// Copyright 2018 Staysail Systems, Inc. <info@staysail.tech>\n+// Copyright 2020 Staysail Systems, Inc. <info@staysail.tech>\n // Copyright 2018 Capitar IT Group BV <info@capitar.com>\n //\n // This software is supplied under the terms of the MIT License, a\n@@ -307,10 +307,9 @@ nni_plat_udp_sockname(nni_plat_udp *udp, nni_sockaddr *sa)\n {\n \tSOCKADDR_STORAGE ss;\n \tint              sz;\n-\tint              rv;\n \n \tsz = sizeof(ss);\n-\tif ((rv = getsockname(udp->s, (SOCKADDR *) &ss, &sz)) < 0) {\n+\tif (getsockname(udp->s, (SOCKADDR *) &ss, &sz) < 0) {\n \t\treturn (nni_win_error(GetLastError()));\n \t}\n \treturn (nni_win_sockaddr2nn(sa, &ss));\ndiff --git a/src/protocol/pair1/pair.c b/src/protocol/pair1/pair.c\nindex 70654d6db..051bc8f36 100644\n--- a/src/protocol/pair1/pair.c\n+++ b/src/protocol/pair1/pair.c\n@@ -1,5 +1,5 @@\n //\n-// Copyright 2018 Staysail Systems, Inc. <info@staysail.tech>\n+// Copyright 2020 Staysail Systems, Inc. <info@staysail.tech>\n // Copyright 2018 Capitar IT Group BV <info@capitar.com>\n //\n // This software is supplied under the terms of the MIT License, a\n@@ -267,7 +267,6 @@ pair1_pipe_recv_cb(void *arg)\n \tnni_msg *   msg;\n \tuint32_t    hdr;\n \tnni_pipe *  npipe = p->npipe;\n-\tint         rv;\n \tsize_t      len;\n \n \tif (nni_aio_result(p->aio_recv) != 0) {\n@@ -305,7 +304,7 @@ pair1_pipe_recv_cb(void *arg)\n \t}\n \n \t// Store the hop count in the header.\n-\tif ((rv = nni_msg_header_append_u32(msg, hdr)) != 0) {\n+\tif (nni_msg_header_append_u32(msg, hdr) != 0) {\n \t\t// STAT: bump allocfail\n \t\tnni_msg_free(msg);\n \t\tnni_pipe_recv(npipe, p->aio_recv);\ndiff --git a/src/supplemental/http/http_client.c b/src/supplemental/http/http_client.c\nindex 503008464..3c60bd468 100644\n--- a/src/supplemental/http/http_client.c\n+++ b/src/supplemental/http/http_client.c\n@@ -1,5 +1,5 @@\n //\n-// Copyright 2019 Staysail Systems, Inc. <info@staysail.tech>\n+// Copyright 2020 Staysail Systems, Inc. <info@staysail.tech>\n // Copyright 2018 Capitar IT Group BV <info@capitar.com>\n // Copyright 2019 Devolutions <info@devolutions.net>\n //\n@@ -34,9 +34,7 @@ struct nng_http_client {\n static void\n http_dial_start(nni_http_client *c)\n {\n-\tnni_aio *aio;\n-\n-\tif ((aio = nni_list_first(&c->aios)) == NULL) {\n+\tif (nni_list_empty(&c->aios)) {\n \t\treturn;\n \t}\n \tnng_stream_dialer_dial(c->dialer, c->aio);\ndiff --git a/src/supplemental/util/platform.c b/src/supplemental/util/platform.c\nindex 138e8b0bb..468582bd2 100644\n--- a/src/supplemental/util/platform.c\n+++ b/src/supplemental/util/platform.c\n@@ -155,5 +155,6 @@ nng_cv_wake1(nng_cv *cv)\n uint32_t\n nng_random(void)\n {\n+\t(void) nni_init();\n \treturn (nni_random());\n }\ndiff --git a/src/supplemental/websocket/websocket.c b/src/supplemental/websocket/websocket.c\nindex 55f4e9e4a..c7d3622c4 100644\n--- a/src/supplemental/websocket/websocket.c\n+++ b/src/supplemental/websocket/websocket.c\n@@ -1,5 +1,5 @@\n //\n-// Copyright 2019 Staysail Systems, Inc. <info@staysail.tech>\n+// Copyright 2020 Staysail Systems, Inc. <info@staysail.tech>\n // Copyright 2018 Capitar IT Group BV <info@capitar.com>\n // Copyright 2019 Devolutions <info@devolutions.net>\n //\n@@ -1012,15 +1012,15 @@ ws_read_cb(void *arg)\n \n \tif (frame->hlen == 0) {\n \t\tframe->hlen   = 2;\n-\t\tframe->op     = frame->head[0] & 0x7f;\n-\t\tframe->final  = (frame->head[0] & 0x80) ? 1 : 0;\n-\t\tframe->masked = (frame->head[1] & 0x80) ? 1 : 0;\n+\t\tframe->op     = frame->head[0] & 0x7fu;\n+\t\tframe->final  = (frame->head[0] & 0x80u) ? 1 : 0;\n+\t\tframe->masked = (frame->head[1] & 0x80u) ? 1 : 0;\n \t\tif (frame->masked) {\n \t\t\tframe->hlen += 4;\n \t\t}\n-\t\tif ((frame->head[1] & 0x7F) == 127) {\n+\t\tif ((frame->head[1] & 0x7Fu) == 127) {\n \t\t\tframe->hlen += 8;\n-\t\t} else if ((frame->head[1] & 0x7F) == 126) {\n+\t\t} else if ((frame->head[1] & 0x7Fu) == 126) {\n \t\t\tframe->hlen += 2;\n \t\t}\n \n@@ -1047,7 +1047,7 @@ ws_read_cb(void *arg)\n \tif (frame->buf == NULL) {\n \n \t\t// Determine expected frame size.\n-\t\tswitch ((frame->len = (frame->head[1] & 0x7F))) {\n+\t\tswitch ((frame->len = (frame->head[1] & 0x7Fu))) {\n \t\tcase 127:\n \t\t\tNNI_GET64(frame->head + 2, frame->len);\n \t\t\tif (frame->len < 65536) {\ndiff --git a/src/transport/zerotier/zerotier.c b/src/transport/zerotier/zerotier.c\nindex 552db5276..027d46c29 100644\n--- a/src/transport/zerotier/zerotier.c\n+++ b/src/transport/zerotier/zerotier.c\n@@ -1,5 +1,5 @@\n //\n-// Copyright 2019 Staysail Systems, Inc. <info@staysail.tech>\n+// Copyright 2020 Staysail Systems, Inc. <info@staysail.tech>\n // Copyright 2018 Capitar IT Group BV <info@capitar.com>\n //\n // This software is supplied under the terms of the MIT License, a\n@@ -1675,7 +1675,7 @@ zt_pipe_alloc(\n \tzt_node *ztn = ep->ze_ztn;\n \tint      i;\n \tsize_t   maxfrag;\n-\tsize_t   maxfrags;\n+\tsize_t   maxfrags = 0;\n \n \tif ((p = NNI_ALLOC_STRUCT(p)) == NULL) {\n \t\treturn (NNG_ENOMEM);\n",
  "test_patch": "diff --git a/src/protocol/reqrep0/reqrep_test.c b/src/protocol/reqrep0/reqrep_test.c\nindex b68c08cb4..f46179368 100644\n--- a/src/protocol/reqrep0/reqrep_test.c\n+++ b/src/protocol/reqrep0/reqrep_test.c\n@@ -387,6 +387,37 @@ test_req_context_not_pollable(void)\n \tTEST_NNG_PASS(nng_close(req));\n }\n \n+void\n+test_req_validate_peer(void)\n+{\n+\tnng_socket s1, s2;\n+\tnng_stat * stats;\n+\tnng_stat * reject;\n+\tchar       addr[64];\n+\n+\ttestutil_scratch_addr(\"inproc\", sizeof(addr), addr);\n+\n+\tTEST_NNG_PASS(nng_req0_open(&s1));\n+\tTEST_NNG_PASS(nng_req0_open(&s2));\n+\n+\tTEST_NNG_PASS(nng_listen(s1, addr, NULL, 0));\n+\tTEST_NNG_PASS(nng_dial(s2, addr, NULL, NNG_FLAG_NONBLOCK));\n+\n+\ttestutil_sleep(100);\n+\tTEST_NNG_PASS(nng_stats_get(&stats));\n+\n+\tTEST_CHECK(stats != NULL);\n+\tTEST_CHECK((reject = nng_stat_find_socket(stats, s1)) != NULL);\n+\tTEST_CHECK((reject = nng_stat_find(reject, \"reject\")) != NULL);\n+\n+\tTEST_CHECK(nng_stat_type(reject) == NNG_STAT_COUNTER);\n+\tTEST_CHECK(nng_stat_value(reject) > 0);\n+\n+\tTEST_NNG_PASS(nng_close(s1));\n+\tTEST_NNG_PASS(nng_close(s2));\n+\tnng_stats_free(stats);\n+}\n+\n TEST_LIST = {\n \t{ \"req rep identity\", test_req_rep_identity },\n \t{ \"resend option\", test_resend_option },\n@@ -398,5 +429,6 @@ TEST_LIST = {\n \t{ \"req poll writable\", test_req_poll_writeable },\n \t{ \"req poll readable\", test_req_poll_readable },\n \t{ \"req context not pollable\", test_req_context_not_pollable },\n+\t{ \"req validate peer\", test_req_validate_peer },\n \t{ NULL, NULL },\n };\ndiff --git a/tests/testutil.c b/tests/testutil.c\nindex 1c65c9960..36999448b 100644\n--- a/tests/testutil.c\n+++ b/tests/testutil.c\n@@ -127,14 +127,63 @@ uint32_t\n testutil_htonl(uint32_t in)\n {\n #ifdef NNG_LITTLE_ENDIAN\n-\tin = ((in >> 24u) & 0xffu) |\n-\t    ((in >> 8u) & 0xff00u) |\n-\t    ((in << 8u) & 0xff0000u) |\n-\t    ((in << 24u) & 0xff000000u);\n+\tin = ((in >> 24u) & 0xffu) | ((in >> 8u) & 0xff00u) |\n+\t    ((in << 8u) & 0xff0000u) | ((in << 24u) & 0xff000000u);\n #endif\n \treturn (in);\n }\n \n+void\n+testutil_scratch_addr(const char *scheme, size_t sz, char *addr)\n+{\n+\tif (strcmp(scheme, \"inproc\") == 0) {\n+\t\t(void) snprintf(addr, sz, \"%s://testutil%04x%04x%04x%04x\",\n+\t\t    scheme, nng_random(), nng_random(), nng_random(),\n+\t\t    nng_random());\n+\t\treturn;\n+\t}\n+\n+\tif ((strncmp(scheme, \"tcp\", 3) == 0) ||\n+\t    (strncmp(scheme, \"tls\", 3) == 0)) {\n+\t\t(void) snprintf(addr, sz, \"%s://127.0.0.1:%u\", scheme,\n+\t\t    testutil_next_port());\n+\t\treturn;\n+\t}\n+\n+\tif (strncmp(scheme, \"ws\", 2) == 0) {\n+\t\t(void) snprintf(addr, sz,\n+\t\t    \"%s://127.0.0.1:%u/testutil%04x%04x%04x%04x\", scheme,\n+\t\t    testutil_next_port(), nng_random(), nng_random(),\n+\t\t    nng_random(), nng_random());\n+\t\treturn;\n+\t}\n+\n+\tif (strncmp(scheme, \"ipc\", 3) == 0) {\n+#ifdef _WIN32\n+\t\t// Windows doesn't place IPC names in the filesystem.\n+\t\t(void) snprintf(addr, sz, \"%s://testutil%04x%04x%04x%04x\",\n+\t\t    scheme, nng_random(), nng_random(), nng_random(),\n+\t\t    nng_random());\n+#else\n+\t\tchar *tmpdir;\n+\n+\t\tif (((tmpdir = getenv(\"TMPDIR\")) == NULL) &&\n+\t\t    ((tmpdir = getenv(\"TEMP\")) == NULL) &&\n+\t\t    ((tmpdir = getenv(\"TMP\")) == NULL)) {\n+\t\t\ttmpdir = \"/tmp\";\n+\t\t}\n+\n+\t\t(void) snprintf(addr, sz, \"%s://%s/testutil%04x%04x%04x%04x\",\n+\t\t    scheme, tmpdir, nng_random(), nng_random(), nng_random(),\n+\t\t    nng_random());\n+\t\treturn;\n+#endif\n+\t}\n+\n+\t// We should not be here.\n+\tabort();\n+}\n+\n // testutil_next_port returns a \"next\" allocation port.\n // Ports are chosen by starting from a random point within a\n // range (normally 38000-40000, but other good places to choose\ndiff --git a/tests/testutil.h b/tests/testutil.h\nindex b9acfedff..14cc17127 100644\n--- a/tests/testutil.h\n+++ b/tests/testutil.h\n@@ -40,6 +40,11 @@ extern void testutil_sleep(int);\n // testutil_next_port returns a new port number (presumably unique)\n extern uint16_t testutil_next_port(void);\n \n+// testutil_scratch_addr makes a scratch address for the given scheme.\n+// The address buffer must be supplied, and the size should be at least\n+// 64 bytes to ensure no truncation occurs.\n+extern void testutil_scratch_addr(const char *, size_t, char *);\n+\n // testutil_marry connects two sockets using inproc.  It uses socket\n // pipe hooks to ensure that it does not return before both sockets\n // are fully connected.\n",
  "problem_statement": "Desire better way to access statistics for NNG objects\nThis is mostly going to be useful in the test framework.\r\n\r\nWe would like to be able to find a specific statistics tree for a dialer, listener, or socket.\r\n\r\nWe might also like to find a named statistic, generically.\n",
  "hints_text": "",
  "created_at": "2020-01-01T02:24:11Z"
}